// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Payroll.Infrastructure.Migrations
{
    [DbContext(typeof(PayrollDbContext))]
    internal class PayrollContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Payroll.Core.Entities.Dependent", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                b.Property<decimal>("BenefitsDeduction")
                    .ValueGeneratedOnAdd()
                    .HasDefaultValue(500m);

                b.Property<DateTime?>("DateCreatedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp()");

                b.Property<DateTime?>("DateModifiedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAddOrUpdate()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp() ON UPDATE current_timestamp()");

                b.Property<int>("EmployeeId");

                b.Property<int>("PersonId");

                b.HasKey("Id");

                b.HasIndex("EmployeeId");

                b.HasIndex("PersonId");

                b.ToTable("Dependents");
            });

            modelBuilder.Entity("Payroll.Core.Entities.Employee", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                b.Property<decimal>("BenefitsDeduction")
                    .ValueGeneratedOnAdd()
                    .HasDefaultValue(1000m);

                b.Property<DateTime?>("DateCreatedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp()");

                b.Property<DateTime?>("DateModifiedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAddOrUpdate()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp() ON UPDATE current_timestamp()");

                b.Property<int>("PersonId");

                b.Property<decimal>("Salary")
                    .ValueGeneratedOnAdd()
                    .HasDefaultValue(52000m);

                b.HasKey("Id");

                b.HasIndex("PersonId");

                b.ToTable("Employees");
            });

            modelBuilder.Entity("Payroll.Core.Entities.Person", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn);

                b.Property<DateTime?>("DateCreatedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAdd()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp()");

                b.Property<DateTime?>("DateModifiedUtc")
                    .IsRequired()
                    .ValueGeneratedOnAddOrUpdate()
                    .HasColumnType("TIMESTAMP")
                    .HasDefaultValueSql("current_timestamp() ON UPDATE current_timestamp()");

                b.Property<string>("FirstName");

                b.Property<string>("LastName");

                b.HasKey("Id");

                b.ToTable("Persons");
            });

            modelBuilder.Entity("Payroll.Core.Entities.Dependent", b =>
            {
                b.HasOne("Payroll.Core.Entities.Employee", "Employee")
                    .WithMany("Dependents")
                    .HasForeignKey("EmployeeId")
                    .OnDelete(DeleteBehavior.Cascade);

                b.HasOne("Payroll.Core.Entities.Person", "Person")
                    .WithMany()
                    .HasForeignKey("PersonId")
                    .OnDelete(DeleteBehavior.Cascade);
            });

            modelBuilder.Entity("Payroll.Core.Entities.Employee", b =>
            {
                b.HasOne("Payroll.Core.Entities.Person", "Person")
                    .WithMany()
                    .HasForeignKey("PersonId")
                    .OnDelete(DeleteBehavior.Cascade);
            });
#pragma warning restore 612, 618
        }
    }
}